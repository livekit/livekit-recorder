// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.6
// source: livekit_recording_internal.proto

package livekit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordingTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	WsUrl string `protobuf:"bytes,2,opt,name=ws_url,json=wsUrl,proto3" json:"ws_url,omitempty"`
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RecordingTemplate) Reset() {
	*x = RecordingTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_recording_internal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordingTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingTemplate) ProtoMessage() {}

func (x *RecordingTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_recording_internal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingTemplate.ProtoReflect.Descriptor instead.
func (*RecordingTemplate) Descriptor() ([]byte, []int) {
	return file_livekit_recording_internal_proto_rawDescGZIP(), []int{0}
}

func (x *RecordingTemplate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RecordingTemplate) GetWsUrl() string {
	if x != nil {
		return x.WsUrl
	}
	return ""
}

func (x *RecordingTemplate) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RecordingInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string             `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Template  *RecordingTemplate `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	Width     int32              `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height    int32              `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Depth     int32              `protobuf:"varint,5,opt,name=depth,proto3" json:"depth,omitempty"`
	Framerate int32              `protobuf:"varint,6,opt,name=framerate,proto3" json:"framerate,omitempty"`
}

func (x *RecordingInput) Reset() {
	*x = RecordingInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_recording_internal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordingInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingInput) ProtoMessage() {}

func (x *RecordingInput) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_recording_internal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingInput.ProtoReflect.Descriptor instead.
func (*RecordingInput) Descriptor() ([]byte, []int) {
	return file_livekit_recording_internal_proto_rawDescGZIP(), []int{1}
}

func (x *RecordingInput) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RecordingInput) GetTemplate() *RecordingTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *RecordingInput) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *RecordingInput) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *RecordingInput) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *RecordingInput) GetFramerate() int32 {
	if x != nil {
		return x.Framerate
	}
	return 0
}

type RecordingS3Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket    string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key       string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	AccessKey string `protobuf:"bytes,3,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	Secret    string `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *RecordingS3Output) Reset() {
	*x = RecordingS3Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_recording_internal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordingS3Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingS3Output) ProtoMessage() {}

func (x *RecordingS3Output) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_recording_internal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingS3Output.ProtoReflect.Descriptor instead.
func (*RecordingS3Output) Descriptor() ([]byte, []int) {
	return file_livekit_recording_internal_proto_rawDescGZIP(), []int{2}
}

func (x *RecordingS3Output) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *RecordingS3Output) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RecordingS3Output) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *RecordingS3Output) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type RecordingOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File           string             `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Rtmp           string             `protobuf:"bytes,2,opt,name=rtmp,proto3" json:"rtmp,omitempty"`
	S3             *RecordingS3Output `protobuf:"bytes,3,opt,name=s3,proto3" json:"s3,omitempty"`
	Width          int32              `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height         int32              `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	AudioBitrate   string             `protobuf:"bytes,6,opt,name=audioBitrate,proto3" json:"audioBitrate,omitempty"`
	AudioFrequency string             `protobuf:"bytes,7,opt,name=audioFrequency,proto3" json:"audioFrequency,omitempty"`
	VideoBitrate   string             `protobuf:"bytes,8,opt,name=videoBitrate,proto3" json:"videoBitrate,omitempty"`
	VideoBuffer    string             `protobuf:"bytes,9,opt,name=videoBuffer,proto3" json:"videoBuffer,omitempty"`
}

func (x *RecordingOutput) Reset() {
	*x = RecordingOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_recording_internal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordingOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingOutput) ProtoMessage() {}

func (x *RecordingOutput) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_recording_internal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingOutput.ProtoReflect.Descriptor instead.
func (*RecordingOutput) Descriptor() ([]byte, []int) {
	return file_livekit_recording_internal_proto_rawDescGZIP(), []int{3}
}

func (x *RecordingOutput) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *RecordingOutput) GetRtmp() string {
	if x != nil {
		return x.Rtmp
	}
	return ""
}

func (x *RecordingOutput) GetS3() *RecordingS3Output {
	if x != nil {
		return x.S3
	}
	return nil
}

func (x *RecordingOutput) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *RecordingOutput) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *RecordingOutput) GetAudioBitrate() string {
	if x != nil {
		return x.AudioBitrate
	}
	return ""
}

func (x *RecordingOutput) GetAudioFrequency() string {
	if x != nil {
		return x.AudioFrequency
	}
	return ""
}

func (x *RecordingOutput) GetVideoBitrate() string {
	if x != nil {
		return x.VideoBitrate
	}
	return ""
}

func (x *RecordingOutput) GetVideoBuffer() string {
	if x != nil {
		return x.VideoBuffer
	}
	return ""
}

type StartRoomRecording struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Input  *RecordingInput  `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	Output *RecordingOutput `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *StartRoomRecording) Reset() {
	*x = StartRoomRecording{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_recording_internal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRoomRecording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRoomRecording) ProtoMessage() {}

func (x *StartRoomRecording) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_recording_internal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRoomRecording.ProtoReflect.Descriptor instead.
func (*StartRoomRecording) Descriptor() ([]byte, []int) {
	return file_livekit_recording_internal_proto_rawDescGZIP(), []int{4}
}

func (x *StartRoomRecording) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StartRoomRecording) GetInput() *RecordingInput {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *StartRoomRecording) GetOutput() *RecordingOutput {
	if x != nil {
		return x.Output
	}
	return nil
}

type EndRoomRecording struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EndRoomRecording) Reset() {
	*x = EndRoomRecording{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_recording_internal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndRoomRecording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndRoomRecording) ProtoMessage() {}

func (x *EndRoomRecording) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_recording_internal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndRoomRecording.ProtoReflect.Descriptor instead.
func (*EndRoomRecording) Descriptor() ([]byte, []int) {
	return file_livekit_recording_internal_proto_rawDescGZIP(), []int{5}
}

func (x *EndRoomRecording) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_livekit_recording_internal_proto protoreflect.FileDescriptor

var file_livekit_recording_internal_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x22, 0x54, 0x0a, 0x11, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x77, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x36, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b,
	0x69, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x22, 0x74, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x33, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xa5, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x74, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x74,
	0x6d, 0x70, 0x12, 0x2a, 0x0a, 0x02, 0x73, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x33, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x02, 0x73, 0x33, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x46,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x85,
	0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x22, 0x0a, 0x10, 0x45, 0x6e, 0x64, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74,
	0x2f, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_livekit_recording_internal_proto_rawDescOnce sync.Once
	file_livekit_recording_internal_proto_rawDescData = file_livekit_recording_internal_proto_rawDesc
)

func file_livekit_recording_internal_proto_rawDescGZIP() []byte {
	file_livekit_recording_internal_proto_rawDescOnce.Do(func() {
		file_livekit_recording_internal_proto_rawDescData = protoimpl.X.CompressGZIP(file_livekit_recording_internal_proto_rawDescData)
	})
	return file_livekit_recording_internal_proto_rawDescData
}

var file_livekit_recording_internal_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_livekit_recording_internal_proto_goTypes = []interface{}{
	(*RecordingTemplate)(nil),  // 0: livekit.RecordingTemplate
	(*RecordingInput)(nil),     // 1: livekit.RecordingInput
	(*RecordingS3Output)(nil),  // 2: livekit.RecordingS3Output
	(*RecordingOutput)(nil),    // 3: livekit.RecordingOutput
	(*StartRoomRecording)(nil), // 4: livekit.StartRoomRecording
	(*EndRoomRecording)(nil),   // 5: livekit.EndRoomRecording
}
var file_livekit_recording_internal_proto_depIdxs = []int32{
	0, // 0: livekit.RecordingInput.template:type_name -> livekit.RecordingTemplate
	2, // 1: livekit.RecordingOutput.s3:type_name -> livekit.RecordingS3Output
	1, // 2: livekit.StartRoomRecording.input:type_name -> livekit.RecordingInput
	3, // 3: livekit.StartRoomRecording.output:type_name -> livekit.RecordingOutput
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_livekit_recording_internal_proto_init() }
func file_livekit_recording_internal_proto_init() {
	if File_livekit_recording_internal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_livekit_recording_internal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordingTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_recording_internal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordingInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_recording_internal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordingS3Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_recording_internal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordingOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_recording_internal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRoomRecording); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_recording_internal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndRoomRecording); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_livekit_recording_internal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_livekit_recording_internal_proto_goTypes,
		DependencyIndexes: file_livekit_recording_internal_proto_depIdxs,
		MessageInfos:      file_livekit_recording_internal_proto_msgTypes,
	}.Build()
	File_livekit_recording_internal_proto = out.File
	file_livekit_recording_internal_proto_rawDesc = nil
	file_livekit_recording_internal_proto_goTypes = nil
	file_livekit_recording_internal_proto_depIdxs = nil
}
